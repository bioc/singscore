% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rankGenesGeneric.R
\docType{methods}
\name{rankGenes}
\alias{rankGenes}
\alias{rankGenes,matrix-method}
\alias{rankGenes,data.frame-method}
\alias{rankGenes,DGEList-method}
\alias{rankGenes,ExpressionSet-method}
\alias{rankGenes,SummarizedExperiment-method}
\title{Rank genes by the gene expression intensities}
\usage{
rankGenes(expreMatrix, tiesMethod = "min")

\S4method{rankGenes}{matrix}(expreMatrix, tiesMethod = "min")

\S4method{rankGenes}{data.frame}(expreMatrix, tiesMethod = "min")

\S4method{rankGenes}{DGEList}(expreMatrix, tiesMethod = "min")

\S4method{rankGenes}{ExpressionSet}(expreMatrix, tiesMethod = "min")

\S4method{rankGenes}{SummarizedExperiment}(expreMatrix,
  tiesMethod = "min")
}
\arguments{
\item{expreMatrix}{A gene expression matrix (matrix,data.frame) or S4 object
(ExpressionSet,DGEList, SummarizedExperiment)}

\item{tiesMethod}{A character indicating what method to use when dealing with
ties}
}
\value{
The ranked gene expression matrix that has samples in columns and
genes in rows
}
\description{
The \code{rankGenes} function is a generic function that can deal
with mutilple types of inputs. Given a matrix of gene expression that has
samples in columns, genes in rows, and values being gene expression
intensity,\code{rankGenes} ranks gene expression intensities in each sample.

It can also work with S4 objects that have gene expression matrix as a
component (i.e ExpressionSet, DGEList,SummarizedExperiment). It calls the
\code{rank} function in the base package which ranks the gene expression
matrix by its absolute expression level. If the input is S4 object of
\code{DGEList, ExpressionSet, or SummarizedExperiment}, it will extract the
gene expression matrix from the object and rank the genes. The default
'tiesMethod' is set to 'min'.
}
\examples{
rankGenes(toy_expr_se) # toy_expr_se is a gene expression dataset
tiesMethod = 'min'
# get counts from toy_expr_se
counts <- SummarizedExperiment::assay(toy_expr_se)
# or it can be a ExpressionSet object

e <- Biobase::ExpressionSet(assayData = as.matrix(counts))
rankGenes(e) 
}
\seealso{
\code{\link{rank}} \link[=ExpressionSet-class]{ExpressionSet}
\link[=SummarizedExperiment-class]{SummarizedExperiment}
\link[=DGEList-class]{DGEList}
}
